plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

version = '23.11.03' 

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

jar {
	archiveFileName = "${rootProject.name}-${archiveVersion.get()}.jar"

    manifest {
        attributes 'Implementation-Title': 'Command line tool to download calls from Ringover and generate an Excel file that can be used as input of Qfiniti Data Importer',  
        	'Implementation-Version': version,
        	'Main-Class': 'com.opentext.qfiniti.importer.ringover.Ringover2QfinitiDataImporterLauncher'
    }
    
    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    
    //https://discuss.gradle.org/t/generate-runnable-jar-pakage-dependencies/28171
	exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'	
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE		    
}

dependencies {
	// Apache Commons CLI provides a simple API for presenting, processing and validating a Command Line Interface.		
	// https://mvnrepository.com/artifact/commons-cli/commons-cli
	implementation 'commons-cli:commons-cli:1.6.0'
  


	// Apache POI Common
	// https://mvnrepository.com/artifact/org.apache.poi/poi
	implementation 'org.apache.poi:poi:5.2.4'
	// Apache POI API Based On OPC and OOXML Schemas
	// https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
	// Vulnerabilities from dependencies: CVE-2023-44483
	implementation 'org.apache.poi:poi-ooxml:5.2.4'


	// General data-binding functionality for Jackson: works on core streaming API	
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
	implementation 'com.fasterxml.jackson.core:jackson-core:2.15.3'
	// General data-binding functionality for Jackson: works on core streaming API	
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3'

		
	// Apache HttpComponents Client	
	// https://mvnrepository.com/artifact/org.apache.httpcomponents.client5/httpclient5
	implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'
	// Apache HttpComponents Core HTTP/1.1 Â» 5.2.1
	// https://mvnrepository.com/artifact/org.apache.httpcomponents.core5/httpcore5
	implementation 'org.apache.httpcomponents.core5:httpcore5:5.2.3'

	
	// ==================================================================
	//
	// Common libraries used for log/trace and testing
	//
	// ==================================================================	

	// API for Apache Log4J, a highly configurable logging tool that focuses on performance and low garbage generation. It has a plugin architecture that makes it extensible and supports asynchronous logging based on LMAX Disruptor.
	// https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
	implementation 'org.apache.logging.log4j:log4j-api:2.21.1'
	// Implementation for Apache Log4J, a highly configurable logging tool that focuses on performance and low garbage generation. It has a plugin architecture that makes it extensible and supports asynchronous logging based on LMAX Disruptor.	
	// https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
	implementation 'org.apache.logging.log4j:log4j-core:2.21.1'
	// https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j2-impl
	implementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.21.1'

    // Module "junit-jupiter" of JUnit 5.    
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter
	testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
